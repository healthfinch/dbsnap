{
    "Outputs": {
        "FunctionArn": {
            "Value": {
                "Fn::GetAtt": [
                    "Function",
                    "Arn"
                ]
            }
        },
        "FunctionName": {
            "Value": {
                "Ref": "Function"
            }
        },
        "LatestVersion": {
            "Value": {
                "Fn::GetAtt": [
                    "LatestVersion",
                    "Version"
                ]
            }
        },
        "LatestVersionArn": {
            "Value": {
                "Ref": "LatestVersion"
            }
        },
        "PolicyName": {
            "Value": {
                "Ref": "Policy"
            }
        },
        "RoleArn": {
            "Value": {
                "Fn::GetAtt": [
                    "Role",
                    "Arn"
                ]
            }
        },
        "RoleName": {
            "Value": {
                "Ref": "Role"
            }
        }
    },
    "Resources": {
        "EventSubscription": {
            "Properties": {
                "SnsTopicArn": "aws:sns:1234",
                "SourceType": "db-instance"
            },
            "Type": "AWS::RDS::EventSubscription"
        },
        "Function": {
            "Properties": {
                "Code": {
                    "S3Bucket": "my-lambda-code-bucket",
                    "S3Key": "lambda-test.zip"
                },
                "DeadLetterConfig": {
                    "Ref": "AWS::NoValue"
                },
                "Description": "Test function.",
                "Environment": {
                    "Ref": "AWS::NoValue"
                },
                "Handler": "handler",
                "KmsKeyArn": {
                    "Ref": "AWS::NoValue"
                },
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "Role",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": 3,
                "VpcConfig": {
                    "Ref": "AWS::NoValue"
                }
            },
            "Type": "AWS::Lambda::Function"
        },
        "LatestVersion": {
            "Properties": {
                "FunctionName": {
                    "Ref": "Function"
                }
            },
            "Type": "AWS::Lambda::Version"
        },
        "PermToAllowSnsToInvokeLambda": {
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "Function"
                },
                "Principal": "sns.amazonaws.com",
                "SourceArn": "aws:sns:1234"
            },
            "Type": "AWS::Lambda::Permission"
        },
        "Policy": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:",
                                            {
                                                "Fn::Join": [
                                                    "/",
                                                    [
                                                        "/aws/lambda",
                                                        {
                                                            "Ref": "Function"
                                                        }
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:",
                                            {
                                                "Fn::Join": [
                                                    "/",
                                                    [
                                                        "/aws/lambda",
                                                        {
                                                            "Ref": "Function"
                                                        }
                                                    ]
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "rds:AddTagsToResource",
                                "rds:CreateDBCluster",
                                "rds:CreateDBInstance",
                                "rds:CreateDBSubnetGroup",
                                "rds:DescribeDBClusters",
                                "rds:DescribeDBInstances",
                                "rds:DescribeDBSecurityGroups",
                                "rds:DescribeDBSnapshotAttributes",
                                "rds:DescribeDBSnapshots",
                                "rds:DescribeDBSubnetGroups",
                                "rds:DescribeEvents",
                                "rds:DescribePendingMaintenanceActions",
                                "rds:ListTagsForResource",
                                "rds:RestoreDBClusterFromSnapshot",
                                "rds:RestoreDBInstanceFromDBSnapshot"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Action": [
                                "rds:DeleteDBInstance",
                                "rds:DeleteDBCluster",
                                "rds:ModifyDBCluster",
                                "rds:ModifyDBInstance",
                                "rds:RebootDBInstance"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "rds:db-tag/dbsnap-verify": "true"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Action": [
                                "rds:DeleteDBSubnetGroup",
                                "rds:ModifyDBSubnetGroup"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "rds:subgrp-tag/dbsnap-verify": "true"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Action": [
                                "s3:GetBucketLocation",
                                "s3:ListAllMyBuckets"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:s3:::*"
                            ]
                        },
                        {
                            "Action": [
                                "s3:ListBucket",
                                "s3:GetBucketVersioning"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:s3:::bucket-to-hold-state-docs"
                            ]
                        },
                        {
                            "Action": [
                                "s3:GetObject",
                                "s3:PutObject",
                                "s3:PutObjectAcl",
                                "s3:DeleteObject",
                                "s3:GetObjectVersion",
                                "s3:DeleteObjectVersion"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:s3:::bucket-to-hold-state-docs/*"
                            ]
                        },
                        {
                            "Action": [
                                "kms:Encrypt",
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:ReEncryptTo",
                                "kms:ReEncryptFrom",
                                "kms:GenerateDataKey",
                                "kms:GenerateDataKeyWithoutPlaintext"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "aws:kms:1234"
                            ]
                        },
                        {
                            "Action": [
                                "kms:ListGrants",
                                "kms:CreateGrant",
                                "kms:RevokeGrant"
                            ],
                            "Condition": {
                                "Bool": {
                                    "kms:GrantIsForAWSResource": true
                                }
                            },
                            "Effect": "Allow",
                            "Resource": [
                                "aws:kms:1234"
                            ]
                        }
                    ]
                },
                "PolicyName": "test-test_aws_lambda_DbsnapVerifyFunction-policy",
                "Roles": [
                    {
                        "Ref": "Role"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "Role": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Policies": {
                    "Ref": "AWS::NoValue"
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "SnsSubscriptionToLambda": {
            "Properties": {
                "Endpoint": {
                    "Fn::GetAtt": [
                        "Function",
                        "Arn"
                    ]
                },
                "Protocol": "lambda",
                "TopicArn": "aws:sns:1234"
            },
            "Type": "AWS::SNS::Subscription"
        }
    }
}
